---
import About from "../components/sections/About.astro";
//import Contact from "../components/sections/Contact.astro";
import Footer from "../components/sections/Footer.astro";
import Header from "../components/sections/Header.astro";
import Hero from "../components/sections/Hero.astro";
import Summary from "../components/sections/Summary.astro";
import WhyItMatters from "../components/sections/WhyItMatters.astro";
import WideImage from "../components/sections/WideImage.astro";
import Goals from "../components/sections/Goals.astro";
import Wrapper from "../components/utils/Wrapper.astro";
import BaseLayout from "../layout/BaseLayout.astro";
//import SmoothScroll from "../components/utils/SmoothScroll.astro";

import 'aos/dist/aos.css';
//import 'locomotive-scroll/dist/locomotive-scroll.css';
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>Green Web Initiative</title>
    </head>
    <body>
        <BaseLayout>
      <!--<SmoothScroll>-->
          <Wrapper>
              <Header />
              <Hero />
              <Summary />
              <WhyItMatters />
              <WideImage />
              <Goals />
              <About />
              {/*<Contact />*/}
              <Footer />
          </Wrapper>
      <!--</SmoothScroll>-->
  </BaseLayout>

  <script>
    import AOS from "aos";
    
    import { initSmoothScrolling } from "../components/utils/SmoothScroll.js";
    
    
    document.addEventListener('DOMContentLoaded', () => {
      // First initialize smooth scrolling
      //const scroller = initSmoothScrolling();
      
      // Then initialize AOS with settings that work with Locomotive Scroll
      AOS.init({
        // Global settings:
        disable: false,
        startEvent: 'DOMContentLoaded',
        initClassName: 'aos-init',
        animatedClassName: 'aos-animate',
        useClassNames: false,
        disableMutationObserver: false,
        debounceDelay: 50,
        throttleDelay: 99,
        
        // Settings that can be overridden on per-element basis
        offset: 50,
        delay: 0,
        duration: 150,
        easing: 'ease-out-quart',
        once: false, // Set to false to allow animations to occur every time an element enters viewport
        mirror: true, // Allow elements to animate out when scrolling past them
        anchorPlacement: 'top-bottom',
      });
      
      // Make AOS available globally for our scroll event handler
      window.AOS = AOS;
      
      // Force refresh AOS after a small delay to catch any elements
      // that might be out of viewport initially
      setTimeout(() => {
        AOS.refresh();
      }, 500);
    });
  </script>
    </body>
</html>